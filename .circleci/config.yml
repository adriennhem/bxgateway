version: 2
jobs:

  test-unit:
    docker:
      - image: circleci/python:2.7
    steps:
      - add_ssh_keys:
          fingerprints:
            "36:c1:e1:3e:e9:c6:c6:4b:8e:54:b1:34:ae:9a:ae:ad"
#      - run:
#          command: |
#            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
#
#            # Set up our ssh config so that we can use multiple github keys
#            cat << EOF > ~/.ssh/config
#            Host bxgateway.github.com
#            HostName github.com
#            PreferredAuthentications publickey
#            IdentityFile /home/circleci/.ssh/id_rsa
#
#            Host bxcommon.github.com
#            HostName github.com
#            PreferredAuthentications publickey
#            IdentityFile /home/circleci/.ssh/id_rsa_36c1e13ee9c6c64b8e54b134ae9aaead
#            EOF
      - checkout:
          path:
            "bxgateway"
#      - run:
#          name: Git clone bxcommon
#          command: |
#            git clone -b develop --single-branch --depth=1 git@bxcommon.github.com:bloXroute-Labs/bxcommon.git
      - run:
          name: Git clone bxcommon
          command: |
            git clone git@bxcommon.github.com:bloXroute-Labs/bxcommon.git
      - restore_cache: # restores saved dependency cache if the Branch key template or requirements.txt files have not changed since the previous run
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run: # install and activate virtual environment with pip
          command: |
            python -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache: # special step to save dependency cache
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run: # run tests
          name: Tests
          command: |
            . venv/bin/activate
            PYLINTRC_PATH=bxcommon/pylintrc python -m unittest discover -s bxgateway/test -t bxgateway/test --verbose
      - store_artifacts:
          path: test-reports/
          destination: tr1

  build:
    docker:
      - image: circleci/python:2.7

    steps:
      - checkout
      - run:
          name: Package
          command: 'echo "Yay develop build!"'

  build-prod:
    docker:
      - image: circleci/python:2.7

    steps:
      - checkout
      - run:
          name: Package
          command: 'echo "Yay master build!"'

workflows:
  version: 2

  test-build:
    jobs:
      - test-unit
      - build:
          requires:
            - test-unit
          filters:
            branches:
              only: develop

      - build-prod:
          requires:
            - test-unit
          filters:
            branches:
              only: master
